// <auto-generated />
using System;
using BilgisayarMagazasiSistemi.Data.Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilgisayarMagazasiSistemi.Data.Access.Migrations
{
    [DbContext(typeof(BilgisayarContext))]
    [Migration("20250310113227_initial2")]
    partial class initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ali054343@gmail.com",
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            Email = "gglglgl@hotmail.com",
                            Name = "Burak"
                        });
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Products");

                    b.HasDiscriminator().HasValue("Product");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asus",
                            Price = 5000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            Name = "Msi",
                            Price = 6000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lenovo",
                            Price = 4000m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hp",
                            Price = 4500m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dell",
                            Price = 7000m,
                            Stock = 100
                        });
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Desktop", b =>
                {
                    b.HasBaseType("BilgisayarMagazasiSistemi.Core.Entities.Product");

                    b.Property<string>("GPU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PSU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Desktop");
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Laptop", b =>
                {
                    b.HasBaseType("BilgisayarMagazasiSistemi.Core.Entities.Product");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Laptop");
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Order", b =>
                {
                    b.HasOne("BilgisayarMagazasiSistemi.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Product", b =>
                {
                    b.HasOne("BilgisayarMagazasiSistemi.Core.Entities.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("BilgisayarMagazasiSistemi.Core.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
